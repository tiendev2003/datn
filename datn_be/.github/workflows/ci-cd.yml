name: Java CI/CD with Maven

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Dịch vụ MySQL để chạy các bài test
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gym_db
          MYSQL_USER: gym_user
          MYSQL_PASSWORD: gym_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      # Dịch vụ Redis nếu cần thiết cho các bài test
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
      working-directory: ./datn_be
    
    - name: Run Tests
      run: mvn -B test
      working-directory: ./datn_be
    
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: datn_be/target/*.jar

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: java-app
        path: datn_be/target/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./datn_be
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/datn-be:latest,${{ secrets.DOCKER_HUB_USERNAME }}/datn-be:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/datn-be:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/datn-be:buildcache,mode=max

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Deploy to production server
      # Bạn có thể sử dụng các action khác nhau tùy thuộc vào môi trường triển khai
      # Ví dụ: SSH vào server, kéo image mới và khởi động lại container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST }}
        username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
        key: ${{ secrets.PRODUCTION_SERVER_KEY }}
        passphrase: ${{ secrets.PRODUCTION_SERVER_PASSPHRASE }}
        script: |
          cd /path/to/your/deployment
          docker-compose pull
          docker-compose up -d